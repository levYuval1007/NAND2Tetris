class Game{

    field Array allLetters; // an array containing all letters ascii code.
    field Array lettersObject;  // contains all letter objects of the game
    field int speed , minSpeed , maxSpeed, score;  // speed limits

    constructor Game new()
    {
        do initLetters();
        let lettersObject=Array.new(6);
        let speed=70;
        let minSpeed=120;
        let maxSpeed=20;
        let score = 0;
        do Output.moveCursor(22,1);
        do Output.printString("------------faster - down arrow , slower - up arrow------------");
        return this;
    }

    /** prints the current score to the top left corner of the screen. */
    method void printScore(){
        do Output.moveCursor(1,1);
        do Output.printInt(score);
        return;
    }

    /** initializing the "allLetters" array. */
    method void initLetters()
    {
        var int i,l;
        let allLetters = Array.new(18);
        let i = 0;
        let l = 65;  // starts from A
        while (i < 18){  // 18 is the num of letters variety.
            let allLetters[i] = l;
            let l = l + 1;
            let i = i + 1;
        }
        return;
    }

    /** initializing the "lettersObject" array */
    method void initLetterObjects(){
        var int i, x, letterInd;
        var char letter;
        var Letter newLetter;
        let i = 0;
        let x = 41;  // the coordinate of the first letters column
        while (i < 6){
            let letterInd = Random.randRange(17);
            let letter = allLetters[letterInd];
            let newLetter = Letter.new(x,letter);
            let lettersObject[i] = newLetter;
            let i = i + 1;
            let x = x + 80;  // adding the horizontal gap between 2 letters.
        }
        return;
    }

    /** checks if the game is over */
    method boolean endGame(){
        var int i;
        var Letter curObj;
        var boolean curInGame;
        var int curBottomEdge;
        let i = 0;

        while(i<6){

            let curObj = lettersObject[i];
            let curInGame = curObj.getInGame();
            let curBottomEdge = curObj.getBottomEdge();
            if ((curInGame) & (curBottomEdge > 240)) {  // when the letter reaches the bottom edge of the screen
                return true;
            }
            let i = i + 1;
        }
        return false;
    }

    /** handles a key press */
    method void handleUserPress(char key){

        var char letter;
        var int i, rand;
        var Letter curLetter;
        var boolean curInGame;
        let i = 0;

        while (i<6){
            let curLetter = lettersObject[i];
            let letter = curLetter.getLetter();
            let curInGame = curLetter.getInGame();
            if ((key = letter) & (curInGame)){  // if a letter on the screen is pressed
                let rand  = Random.randRange(17);
                let letter = allLetters[rand];
                do curLetter.rewindLetter(letter);  // init new letter
                let score = score + 1;
                do printScore();
            }
            let i = i + 1;
        }
        if ((key = 133) & (speed > maxSpeed)){  // controls speed presses
            let speed = speed - 5;
        }
        if ((key = 131) & (speed < minSpeed)){
            let speed = speed + 5;
        }
        return;
    }

    /** this method is handling a single game sequence. */
    method void run(){
        var char key;
        var boolean gameOver;
        var int i,j;
        var Letter curLetter;
        let gameOver = false;
        do initLetterObjects();

        while (~gameOver){

            do Sys.wait(speed);
            let i = 0;
            while(i < 6){ // updating the states of all letters in the game
                let curLetter = lettersObject[i];
                do curLetter.updateState();
                let i = i + 1;
            }
            if (j > 10){  // in order to keep spaces between letters
                do chooseLetterToGame();
                let j = 0;
            }
            let j = j + 1;
            let key = Keyboard.keyPressed();
            if (~(key = 0)){
                do handleUserPress(key);
            }
            let gameOver = endGame();
        }

        do printGameOver();
        return;

    }

    /** handles the game over screen */
    method void printGameOver(){

        var int i,a;
        var Letter curLetter;
        var Array gameOverLetters;
        let gameOverLetters = Array.new(8);
        let gameOverLetters[0]= Letter.new(121,71);  //G
        let gameOverLetters[1] = Letter.new(201,65);  //A
        let gameOverLetters[2] = Letter.new(281,77);  //M
        let gameOverLetters[3] = Letter.new(361,69);  //E
        let gameOverLetters[4] = Letter.new(121,79);  //O
        let gameOverLetters[5] = Letter.new(201,86);  //V
        let gameOverLetters[6] = Letter.new(281,69);  //E
        let gameOverLetters[7] = Letter.new(361,82);  //R
        let i=0;
        let a =40;
        do Screen.clearScreen();
        while (i<8){
            let curLetter = gameOverLetters[i];
            do curLetter.editLocation(a);
            let a = a+10;
            if (i = 3){
                let a= a+20;
            }
            do curLetter.drawObject();
            do curLetter.dispose();
            let i = i+1;
        }
        do Output.moveCursor(18,20);
        do Output.printString("TOTAL SCORE : ");
        do Output.printInt(score);
        do Output.printString(" :)");
        return;
    }

    /** this method is randomizing a letter and adds it to the game.*/
    method void chooseLetterToGame(){
        var int rand;
        var int i;
        var Letter curLetter;
        var boolean curInGame;
        let i = 0;
        let rand = Random.randRange(5);
        let curLetter = lettersObject[rand];
        let curInGame = curLetter.getInGame();

        while ((curInGame) & (i < 36)){  // if letter is already in game, randomize a new one (try at most 36 times to prevent endless loop)
            let rand = Random.randRange(5);
            let curLetter = lettersObject[rand];
            let curInGame = curLetter.getInGame();
            let i = i + 1;
        }
        if(i < 36){
            do curLetter.changeInGame();
        }
        return;
    }

    /** disposes the game object and all its object fields. */
    method void dispose(){
        var int i;
        var Letter curLetter;
        let i = 0;

        while(i < 6)
        {
            let curLetter = lettersObject[i];
            do curLetter.dispose();
            let i = i + 1;
        }
        do lettersObject.dispose();
        do allLetters.dispose();
        do Memory.deAlloc(this);
        return;
    }
}
